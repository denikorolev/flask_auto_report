"""Add profile_id, config_type, created_at, updated_at to AppConfig

Revision ID: 8f76587dcac6
Revises: 71e20bb40620
Create Date: 2025-01-08 15:23:10.799291

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8f76587dcac6'
down_revision = '71e20bb40620'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('app_config', schema=None) as batch_op:
        batch_op.add_column(sa.Column('profile_id', sa.BigInteger(), nullable=True))
        batch_op.add_column(sa.Column('config_type', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.drop_constraint('app_config_config_user_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user_profiles', ['profile_id'], ['id'])
        batch_op.drop_column('config_user')


    # Инициализируем profile_id значением 1 для всех существующих записей
    op.execute("UPDATE app_config SET profile_id = 1")

    # Устанавливаем временные метки для существующих записей
    op.execute("UPDATE app_config SET created_at = NOW(), updated_at = NOW()")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('app_config', schema=None) as batch_op:
        batch_op.add_column(sa.Column('config_user', sa.BIGINT(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('app_config_config_user_fkey', 'users', ['config_user'], ['id'])
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('config_type')
        batch_op.drop_column('profile_id')

    # ### end Alembic commands ###
