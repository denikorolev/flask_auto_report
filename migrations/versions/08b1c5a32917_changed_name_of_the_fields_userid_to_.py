"""changed name of the fields userid to user_id, type to type_id and type_text, and subtype to subtype_text

Revision ID: 08b1c5a32917
Revises: f2381bebc3eb
Create Date: 2024-11-05 18:30:10.294812

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '08b1c5a32917'
down_revision = 'f2381bebc3eb'
branch_labels = None
depends_on = None

def upgrade():
    # Add new columns first
    with op.batch_alter_table('report_subtype', schema=None) as batch_op:
        batch_op.add_column(sa.Column('type_id', sa.SmallInteger(), nullable=True))  # Set nullable temporarily
        batch_op.add_column(sa.Column('subtype_text', sa.String(length=250), nullable=True))  # Set nullable temporarily

    with op.batch_alter_table('report_type', schema=None) as batch_op:
        batch_op.add_column(sa.Column('type_text', sa.String(length=50), nullable=True))  # Set nullable temporarily

    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.BigInteger(), nullable=True))  # Set nullable temporarily

    # Copy data from old columns to new columns
    op.execute("UPDATE report_subtype SET type_id = type, subtype_text = subtype")
    op.execute("UPDATE report_type SET type_text = type")
    op.execute("UPDATE reports SET user_id = userid")

    # Now set new columns as NOT NULL and drop old columns
    with op.batch_alter_table('report_subtype', schema=None) as batch_op:
        batch_op.alter_column('type_id', nullable=False)
        batch_op.alter_column('subtype_text', nullable=False)
        batch_op.drop_constraint('report_subtype_type_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'report_type', ['type_id'], ['id'])
        batch_op.drop_column('type')
        batch_op.drop_column('subtype')

    with op.batch_alter_table('report_type', schema=None) as batch_op:
        batch_op.alter_column('type_text', nullable=False)
        batch_op.drop_column('type')

    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.alter_column('user_id', nullable=False)
        batch_op.drop_constraint('reports_userid_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('userid')


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.add_column(sa.Column('userid', sa.BIGINT(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('reports_userid_fkey', 'users', ['userid'], ['id'])
        batch_op.drop_column('user_id')

    with op.batch_alter_table('report_type', schema=None) as batch_op:
        batch_op.add_column(sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.drop_column('type_text')

    with op.batch_alter_table('report_subtype', schema=None) as batch_op:
        batch_op.add_column(sa.Column('subtype', sa.VARCHAR(length=250), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('type', sa.SMALLINT(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('report_subtype_type_fkey', 'report_type', ['type'], ['id'])
        batch_op.drop_column('subtype_text')
        batch_op.drop_column('type_id')

    # ### end Alembic commands ###
