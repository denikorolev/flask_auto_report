"""Add fs_uniquifier field to users table

Revision ID: d2bcb02606c8
Revises: 99def729b1f1
Create Date: 2024-11-23 23:06:19.324809

"""
from alembic import op
import sqlalchemy as sa
import uuid
from sqlalchemy.sql import table, column
from sqlalchemy import String


# revision identifiers, used by Alembic.
revision = 'd2bcb02606c8'
down_revision = '99def729b1f1'
branch_labels = None
depends_on = None

users_table = table(
    'users',
    column('id', String),
    column('fs_uniquifier', String)
)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fs_uniquifier', sa.String(length=255), nullable=True))
        batch_op.create_unique_constraint(None, ['fs_uniquifier'])


    # Генерируем уникальные значения для fs_uniquifier для всех пользователей
    conn = op.get_bind()
    results = conn.execute(users_table.select())
    for row in results:
        conn.execute(
            users_table.update()
            .where(users_table.c.id == row.id)
            .values(fs_uniquifier=str(uuid.uuid4()))
        )
        
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('fs_uniquifier')

    # ### end Alembic commands ###
