// edit_report.js

document.addEventListener("DOMContentLoaded", function () {

    initSortable(); // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤

    initParagraphPopupCloseHandlers(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—à–∞—Ç–µ–ª–µ–π –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–ø–∞–ø–∞

    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É "—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å" –≤ –ø–æ–ø–∞–ø–µ —Ç–µ–∫—Å—Ç–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞
    document.getElementById("elementPopupSaveChangesButton").addEventListener("click", function() {
        handleSaveChangesButtonClick();
    });

    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–∫—Ä—ã—Ç—å –ø–æ–ø–∞–ø –±—É—Ñ–µ—Ä–∞
    document.getElementById("openBufferPopupButton").addEventListener("click", function() {
        showBufferPopup(this);
    });

    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫–∏ üóíÔ∏è
    document.querySelectorAll(".control-btn--copy-to-buffer").forEach(btn => {btn.addEventListener("click", function() {
        addGroupDataToBuffer(this);
        });
    });

    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úÇÔ∏è"
    document.querySelectorAll(".control-btn--unlink").forEach(btn => {
        btn.addEventListener("click", function() {
            deleteSubsidiaries(this);
        });
    });



    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—à–∞—Ç–µ–ª–µ–π –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞ –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–ø–∞–ø–∞
    document.querySelectorAll(".edit-paragraph__title").forEach(sentence => {
        sentence.addEventListener("dblclick", function (event) {
            event.stopPropagation();
            showParagraphPopup(this, event);
        });
    });

    // –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –≤—ã–∑–æ–≤–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –Ω–µ–≥–æ
    document.querySelectorAll(".edit-paragraph__title").forEach(paragraph => {
        paragraph.addEventListener("click", function (event) {
            event.stopPropagation(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
            makeEditable(this);
        });
    });

    // —Å–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
    document.getElementById("updateReportButton").addEventListener("click", function() {
        handleUpdateReportButtonClick();
    });

    

    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä–∞–≥—Ä–∞—Ñ"
    document.getElementById("addParagraphButton").addEventListener("click", function() {
        const itemFromBuffer = null
        addParagraph(itemFromBuffer);
        }
    );


    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–∞–≥—Ä–∞—Ñ" –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞
    document.querySelectorAll(".control-btn--edit").forEach(button => {
        button.addEventListener("click", function() {
            editParagraph(this);
        });
    });

    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–£–¥–∞–ª–∏—Ç—å –ø–∞—Ä–∞–≥—Ä–∞—Ñ"
    document.querySelectorAll(".control-btn--delete").forEach(button => {
        button.addEventListener("click", function() {
            deleteParagraph(this);
        });
    });
    
    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏"
    document.getElementById("startCheckersButton").addEventListener("click", function() {
        startReportCheckers(this);
    });

});


// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SortableJS
function initSortable() {
    const paragraphContainer = document.querySelector(".edit-paragraph__list");

    if (paragraphContainer) {
        new Sortable(paragraphContainer, {
            handle: ".drag-handle", // –¢—è–Ω–µ–º –∑–∞ —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç
            animation: 150, // –ì–ª–∞–¥–∫–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
            ghostClass: "sortable-ghost", // –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Å—Ç–∏–ª—å –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
            onEnd: function () {
                updateParagraphOrder();
            }
        });
    }
}


// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤
function updateParagraphOrder() {
    const paragraphs = document.querySelectorAll(".edit-paragraph__item");
    const newOrder = [];

    paragraphs.forEach((paragraph, index) => {
        const paragraphId = paragraph.getAttribute("data-paragraph-id");
        newOrder.push({ id: paragraphId, index: index});
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø–æ—Ä—è–¥–æ–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    console.log("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø–æ—Ä—è–¥–æ–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", newOrder);
    sendRequest({
        url: `/editing_report/update_paragraph_order`,
        method: "POST",
        data: { paragraphs: newOrder }
    }).then(response => {
        window.location.reload();
        console.log("–ü–æ—Ä—è–¥–æ–∫ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω", response);
    }).catch(error => {
        console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞:", error);
    });
}



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–ª–∞–≥–æ–≤ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞
async function handleSaveChangesButtonClick() {
    const popup = document.getElementById("elementPopup");
    const paragraphId = popup.getAttribute("data-element-id");

    const changedData = { paragraph_id: paragraphId };

    // –°–±–æ—Ä –∑–Ω–∞—á–µ–Ω–∏–π —á–µ–∫–±–æ–∫—Å–æ–≤ –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º–∏ –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏
    const checkboxMapping = [
        { id: "elementVisibleCheckbox", key: "paragraph_visible", attr: "data-paragraph-visible" },
        { id: "elementBoldCheckbox", key: "bold_paragraph", attr: "data-bold-paragraph" },
        { id: "elementTitleCheckbox", key: "title_paragraph", attr: "data-title-paragraph" },
        { id: "elementImpressionCheckbox", key: "is_impression", attr: "data-paragraph-impression" },
        { id: "elementIsActiveCheckbox", key: "is_active", attr: "data-paragraph-active" },
        { id: "elementStrBefore", key: "str_before", attr: "data-paragraph-str-before" },
        { id: "elementStrAfter", key: "str_after", attr: "data-paragraph-str-after" },
        { id: "elementIsAdditional", key: "is_additional", attr: "data-paragraph-additional" },
    ];

    const paragraphElement = document.querySelector(`.edit-paragraph__title[data-paragraph-id="${paragraphId}"]`);


    checkboxMapping.forEach(({ id, key, attr }) => {
        const checkbox = document.getElementById(id);
        const currentValue = paragraphElement.getAttribute(attr)?.toLowerCase() === "true";
        const checkboxValue = checkbox.checked === true;
        if (checkboxValue !== currentValue) {
            changedData[key] = checkboxValue;
        }
    });

    console.log("–ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞:", changedData);

    // –ï—Å–ª–∏ –Ω–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    if (Object.keys(changedData).length === 1) {
        console.log("–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.");
        hidePopup();
        return;
    }
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    try {
        const response = await sendRequest({
            url: "/editing_report/update_paragraph_flags",
            method: "PATCH",
            data: changedData
            
        });

        console.log("–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–ª–∞–≥–æ–≤ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞:", response);

        if (response?.status === "success") {
            // –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Ç–æ–º –¥–æ–±–∞–≤–∏—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            window.location.reload();
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞:", error);
    }
}




// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ–ø–∞–ø–∞ —Å –±—É—Ñ–µ—Ä–æ–º
function showBufferPopup(button) {
    const popup = document.getElementById("bufferPopup");

    popup.style.display === "block"
}





// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ–ø–∞–ø–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–µ
function showParagraphPopup(sentenceElement, event) {
    const popup = document.getElementById("elementPopup");

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∞—Ç—Ä–∏–±—É—Ç–æ–≤
    const elementId = sentenceElement.getAttribute("data-paragraph-id");
    const elementIndex = sentenceElement.getAttribute("data-paragraph-index");
    const elementComment = sentenceElement.getAttribute("data-paragraph-comment") || "None";
    const elementTags = sentenceElement.getAttribute("data-paragraph-tags") || "None";

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º elementId –≤ –∞—Ç—Ç—Ä–∏–±—É—Ç—ã –ø–æ–ø–∞–ø–∞
    popup.setAttribute("data-element-id", elementId);

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ø–∞–ø
    document.getElementById("popupElementId").textContent = elementId;
    document.getElementById("popupElementIndex").textContent = elementIndex;
    document.getElementById("popupElementComment").textContent = elementComment;
    document.getElementById("popupElementTags").textContent = elementTags;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–∫—Ä—ã–≤–∞–µ–º, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ None, –ø—É—Å—Ç–æ–µ –∏–ª–∏ null
    document.querySelectorAll(".sentence-popup__info-item").forEach(item => {
        const value = item.querySelector("span").textContent.trim();
        if (!value || value === "None") {
            item.style.display = "none";
        } else {
            item.style.display = "block"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ, –µ—Å–ª–∏ –±—ã–ª–∏ —Å–∫—Ä—ã—Ç—ã –¥–æ —ç—Ç–æ–≥–æ
        }
    });

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–æ–≤ –≤ –ø–æ–ø–∞–ø–µ
    const checkboxMapping = [
        { id: "elementVisibleCheckbox", attr: "data-paragraph-visible" },
        { id: "elementBoldCheckbox", attr: "data-bold-paragraph" },
        { id: "elementTitleCheckbox", attr: "data-title-paragraph" },
        { id: "elementImpressionCheckbox", attr: "data-paragraph-impression" },
        { id: "elementIsActiveCheckbox", attr: "data-paragraph-active" },
        { id: "elementStrBefore", attr: "data-paragraph-str-before" },
        { id: "elementStrAfter", attr: "data-paragraph-str-after" },
        { id: "elementIsAdditional", attr: "data-paragraph-additional" },
    ];

    checkboxMapping.forEach(({ id, attr }) => {
        const checkbox = document.getElementById(id);
        const value = sentenceElement.getAttribute(attr)?.toLowerCase() === "true"; // –ü—Ä–∏–≤–æ–¥–∏–º –∫ boolean
        checkbox.checked = value; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–∞
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ø–∞–ø
    popup.style.display = "block";

    // –ü–æ–∑–∏—Ü–∏—è –ø–æ–ø–∞–ø–∞
    const popupWidth = popup.offsetWidth;
    const popupHeight = popup.offsetHeight;
    let posX = event.pageX + 15;
    let posY = event.pageY + 15;

    if (posX + popupWidth > window.innerWidth) {
        posX -= popupWidth + 30;
    }
    if (posY + popupHeight > window.innerHeight) {
        posY -= popupHeight + 30;
    }

    popup.style.left = `${posX}px`;
    popup.style.top = `${posY}px`;
}


// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—à–∞—Ç–µ–ª–µ–π –ø–æ–ø–∞–ø–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞
function initParagraphPopupCloseHandlers() {
    const popup = document.getElementById("elementPopup");
    const closeButton = document.getElementById("closeElementPopup");

    if (!popup || !closeButton) {
        console.error("–ü–æ–ø–∞–ø –∏–ª–∏ –∫–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!");
        return;
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ
    closeButton.addEventListener("click", hidePopup);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –ø–æ–ø–∞–ø–∞
    document.addEventListener("click", function (event) {
        if (popup.style.display === "block" && !popup.contains(event.target)) {
            hidePopup();
        }
    });
}



// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–ø–∞–ø–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞
function hidePopup() {
    const popup = document.getElementById("elementPopup");
    if (popup) {
        popup.style.display = "none";
        // –û—á–∏—â–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã –ø–æ–ø–∞–ø–∞
        popup.removeAttribute("data-element-id");
    } else {
        console.warn("–ü–æ–ø–∞–ø –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    }
}



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞
async function addParagraph(itemFromBuffer) {
    const reportId = document.getElementById("editReportContainer").getAttribute("data-report-id");
    console.log("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –≤ –ø—Ä–æ—Ç–æ–∫–æ–ª:", reportId);
    const paragraphsList = document.getElementById("editParagraphsList");

    if (itemFromBuffer) {
        console.log("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:", itemFromBuffer);
        data = { paragraph_text: itemFromBuffer.object_text,
                 object_id: itemFromBuffer.object_id,
                 object_type: itemFromBuffer.object_type,
                 report_id: reportId
                };
    } else {
        data = { report_id: reportId };
    }

    try {
        const response = await sendRequest({
            url: "/editing_report/add_new_paragraph",
            method: "POST",
            data: data
            
        });

        
        if (response.status === "success") {
            window.location.reload();
        } 
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", error);
    }
}   


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ (–ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞) 
function editParagraph(button) {
    const paragraphId = button.closest(".control-buttons").getAttribute("data-object-id");
    const reportId = button.closest(".control-buttons").getAttribute("data-related-id");

    if (!paragraphId) {
        console.error("–ù–µ –Ω–∞–π–¥–µ–Ω –∞—Ç—Ä–∏–±—É—Ç data-paragraph-id");
        return;
    }

    window.location.href = `/editing_report/edit_paragraph?paragraph_id=${paragraphId}&report_id=${reportId}`;
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
async function handleUpdateReportButtonClick() {

    data = { report_name: document.getElementById("reportName").value,
             report_id: document.getElementById("editReportContainer").getAttribute("data-report-id"),
             report_comment: document.getElementById("reportComment").value,
             report_side: document.querySelector('input[name="report_side"]:checked').value
            };

    console.log("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞:", data);

    try {
        const response = await sendRequest({
            url: `/editing_report/update_report`,
            method: "PATCH",
            data: data
        });
        if (response.status === "success") {
            console.log("–ü—Ä–æ—Ç–æ–∫–æ–ª –æ–±–Ω–æ–≤–ª–µ–Ω:", response.message);
        }
        
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞:", response.message);
    }
}



// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å –ø–∞—Ä–∞–≥—Ä–∞—Ñ" 
function deleteParagraph(button){
    console.log("–£–¥–∞–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞");
    const paragraphId = button.closest(".control-buttons").getAttribute("data-object-id");
        sendRequest({
            url: `/editing_report/delete_paragraph`,
            method: "DELETE",
            data: { paragraph_id: paragraphId },
        }).then(response => {
            window.location.reload();
        }).catch(error => {
            console.log("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞.");
        });
};
       
   
// –∑–∞–ø—É—Å–∫ —á–µ–∫–µ—Ä–æ–≤. 
// –û–±–Ω–æ–≤–∏–ª –Ω–æ –∫–æ—Å—Ç—ã–ª—è–º–∏ !!!!!!!!!!!!!!!!!!!!!!!
function startReportCheckers(button) {
    const reportId = button.getAttribute("data-report-id");
    const checksReportUl = document.getElementById("reportCheckList");

    if (!checksReportUl) {
        console.error("–≠–ª–µ–º–µ–Ω—Ç reportCheckList –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        return;
    }

    const checkReportLi = document.createElement("li");

    console.log(reportId);
    sendRequest({
        url: `/editing_report/report_checkers`,
        data: {report_id: reportId},
    }).then(response => {
        
        checkReportLi.innerHTML = response.message;
        checksReportUl.appendChild(checkReportLi);
        checksReportUl.style.display = "block";
    });
}




// –í—ã–∑—ã–≤–∞–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–µ –Ω—É–∂–Ω–æ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã)

// –§—É–Ω–∫—Ü–∏—è –¥–µ–ª–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–º –∏ —Å–æ–±–∏—Ä–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è
function makeEditable(paragraphElement) {
    if (paragraphElement.getAttribute("contenteditable") === "true") return; // –£–∂–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç—Å—è

    const oldText = paragraphElement.textContent.trim(); // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å—Ç–∞—Ä—ã–π —Ç–µ–∫—Å—Ç
    paragraphElement.setAttribute("contenteditable", "true");
    paragraphElement.focus(); // –î–∞—ë–º —Ñ–æ–∫—É—Å

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    function finishEditing() {
        paragraphElement.setAttribute("contenteditable", "false"); // –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        paragraphElement.removeEventListener("keydown", onEnterPress); // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ Enter

        const newText = paragraphElement.textContent.trim();
        if (newText !== oldText) {
            updateParagraph(paragraphElement); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è
        }
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    paragraphElement.addEventListener("blur", finishEditing, { once: true });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Enter
    function onEnterPress(event) {
        if (event.key === "Enter") {
            console.log("–ù–∞–∂–∞—Ç Enter (Return –Ω–∞ Mac)");
            event.preventDefault(); // –û—Ç–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏
            paragraphElement.blur(); // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ—Ç–µ—Ä—é —Ñ–æ–∫—É—Å–∞
        }
    }

    paragraphElement.addEventListener("keydown", onEnterPress);
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
async function updateParagraph(paragraphElement) {
    const paragraphId = paragraphElement.getAttribute("data-paragraph-id");
    const paragraphText = paragraphElement.textContent.trim();
    console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞:", paragraphText);

    try {
        const response = await sendRequest({
            url: "/editing_report/update_paragraph_text",
            method: "PATCH",
            data: {
                paragraph_id: paragraphId,
                paragraph_text: paragraphText
            }
        });

        console.log("–ü–∞—Ä–∞–≥—Ä–∞—Ñ –æ–±–Ω–æ–≤–ª–µ–Ω:", response);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞:", error);
    }
}



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –≤ –±—É—Ñ–µ—Ä
function addGroupDataToBuffer(button, sentenceType) {
    const objectId = button.closest(".control-buttons").getAttribute("data-object-id");
    const objectType = button.closest(".control-buttons").getAttribute("data-object-type");
    const relatedId = button.closest(".control-buttons").getAttribute("data-related-id");
    const objectText = button.closest(".control-buttons").getAttribute("data-text");

    dataToBuffer = {
        object_id: objectId,
        object_type: objectType,
        related_id: relatedId,
        object_text: objectText
    };

    addToBuffer(dataToBuffer);
    console.log("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä:", dataToBuffer);

}


function deleteSubsidiaries (button) {
    const objectId = button.closest(".control-buttons").getAttribute("data-object-id");
    const objectType = button.closest(".control-buttons").getAttribute("data-object-type");

    sendRequest({
        url: `/editing_report/delete_subsidiaries`,
        method: "DELETE",
        data: { object_id: objectId, object_type: objectType}
    }).then(response => {
        window.location.reload();
    }).catch(error => {
        console.error(response.message || "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:", error);
    });
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –∏–∑ –±—É—Ñ–µ—Ä–∞, –±—É–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞, –Ω–æ —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –±—É—Ñ–µ—Ä–∞
function insertFromBuffer(index) {
    const itemFromBuffer = getFromBuffer(index);

    if (!itemFromBuffer) {
        alert("–≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±—É—Ñ–µ—Ä–µ");
        return;
    }

    console.log("–í—Å—Ç–∞–≤–∫–∞ –∏–∑ –±—É—Ñ–µ—Ä–∞:", itemFromBuffer);
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ
    addParagraph(itemFromBuffer);
}