// edit_head_sentence.js

document.addEventListener("DOMContentLoaded", function () {

    initSentencePopupCloseHandlers(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—à–∞—Ç–µ–ª–µ–π –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–ø–∞–ø–∞


    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—à–∞—Ç–µ–ª–µ–π –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞ –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–ø–∞–ø–∞
    document.querySelectorAll(".edit-sentence__text").forEach(sentence => {
        sentence.addEventListener("dblclick", function (event) {
            event.stopPropagation();
            showSentencePopup(this, event);
        });
    });

    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫ "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
    document.getElementById("editSentenceTitle").addEventListener("click", function () {
        expandBodySentencesHandler();
    }); 

    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–ª–∏–∫ –ø–æ —Ç–µ–∫—Å—Ç—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–º
    document.querySelectorAll(".edit-sentence__text").forEach(sentenceText => {
        sentenceText.addEventListener("click", function (event) {
            event.stopPropagation();
            makeSentenceEditable(this);
        });
    });


    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É üóíÔ∏è
    document.querySelectorAll(".control-btn--copy-to-buffer").forEach(btn => {btn.addEventListener("click", function() {
            addSentenceDataToBuffer(this);
        });
    });


    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–∫—Ä—ã—Ç—å –ø–æ–ø–∞–ø –±—É—Ñ–µ—Ä–∞
    document.getElementById("openBufferPopupButton").addEventListener("click", function() {
        showBufferPopup(this);
    });


    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞"
    document.getElementById("backToParagraphButton").addEventListener("click", function () {
        console.log("Back to paragraph button clicked");
        window.history.back();
    });

    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –ø—Ä–æ—Ç–æ–∫–æ–ª–∞"
    document.getElementById("backToReportButton").addEventListener("click", function () {
        console.log("Back to report button clicked");
        window.history.go(-2);
    });

    // C–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"
    document.getElementById("addBodySentenceButton").addEventListener("click", addBodySentence);

    // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"
    document.querySelectorAll(".control-btn--delete").forEach(button => {
        button.addEventListener("click", function () {
            deleteBodySentence(this);
        });
    });

});


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
async function addBodySentence() {
    const bodySentenceList = document.getElementById("bodySentenceList");
    const headSentenceId = bodySentenceList.getAttribute("data-head-sentence-id");
    const reportId = document.getElementById("editSentenceContainer").getAttribute("data-report-id");
    

    try {
        const response = await sendRequest({
            url: "/editing_report/add_new_sentence",
            method: "POST",
            data: { related_id: headSentenceId,
                    report_id: reportId,
                    sentence_type: "body"
             }
        });

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞
        const newSentenceHTML = `
            <li class="wrapper__card edit-sentence__item" 
                data-sentence-id="${response.id}" 
                data-head-sentence-id="${headSentenceId}"
                data-sentence-type="body" 
                data-sentence-weight="${response.weight}"
                data-sentence-tags="${response.tags || ""}" 
                data-sentence-comment="${response.comment || ""}">

                <div>${response.weight}</div>
                <p class="edit-sentence__text">${response.sentence}</p>
                <button class="btn report__btn edit-sentence__btn--delete" type="button">–£–¥–∞–ª–∏—Ç—å</button>
            </li>
        `;

        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ <li> –∫—Ä–æ–º–µ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"
        const bodySentences = bodySentenceList.querySelectorAll(".edit-sentence__item");
        if (bodySentences.length > 0) {
            // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π <li> –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
            bodySentences[bodySentences.length - 1].insertAdjacentHTML("afterend", newSentenceHTML);
        } else {
            // –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç, –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
            bodySentenceList.insertAdjacentHTML("afterbegin", newSentenceHTML);
        }

        console.log("–ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ:", response);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", error);
    }
}



function makeSentenceEditable(sentenceElement) {
    const sentenceItem = sentenceElement.closest(".edit-sentence__item");
    const isLinked = sentenceItem.getAttribute("data-sentence-is-linked") === "True";
    const audioLocked = new Audio("/static/audio/dzzz.mp3");
    const audioGlass = new Audio("/static/audio/glass_smash.mp3");
    const linkedIcon = sentenceItem.querySelector(".edit-sentence__links-icon--is-linked");

    if (isLinked && linkedIcon) {
        audioLocked.play();
        toastr.warning("–ù–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å - —ç—Ç–æ —Å–≤—è–∑–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ");
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤–æ–∫—Ä—É–≥ –∑–Ω–∞—á–∫–∞ üîó
        createRippleAtElement(linkedIcon);
        return;
        
    }


    // –ï—Å–ª–∏ —É–∂–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç—Å—è ‚Äî –≤—ã—Ö–æ–¥–∏–º
    if (sentenceElement.getAttribute("contenteditable") === "true") return;

    // –ò–Ω–∞—á–µ ‚Äî —Ä–∞–∑—Ä–µ—à–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    sentenceElement.setAttribute("contenteditable", "true");
    sentenceElement.focus();
    makeSentenceEditableActions(sentenceElement);
}
    

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ makeSentenceEditable
function makeSentenceEditableActions(sentenceElement) {
    const oldText = sentenceElement.textContent.trim();

    function finishEditing() {
        sentenceElement.setAttribute("contenteditable", "false");
        sentenceElement.removeEventListener("keydown", onEnterPress);

        const newText = sentenceElement.textContent.trim();
        if (newText !== oldText) {
            updateSentence(sentenceElement); // –í—ã–∑–æ–≤ —Ç–≤–æ–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        }
    }

    // –ü–æ—Ç–µ—Ä—è —Ñ–æ–∫—É—Å–∞
    sentenceElement.addEventListener("blur", finishEditing, { once: true });

    // Enter –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    function onEnterPress(event) {
        if (event.key === "Enter") {
            event.preventDefault();
            sentenceElement.blur();
        }
    }

    sentenceElement.addEventListener("keydown", onEnterPress);
}


/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" –≤ –ø–æ–ø–∞–ø–µ
 */
function initPopupButtons(sentenceElement, sentenceId) {
    const editButton = document.getElementById("sentencePopupEditButton");
    const hardEditCheckbox = document.getElementById("hardEditCheckbox");
    if (!editButton) {
        console.error("–ö–Ω–æ–ø–∫–∞ '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å' –≤ –ø–æ–ø–∞–ø–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
        return;
    }

    editButton.addEventListener("click", function () {
        // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        const sentenceItem = document.querySelector(`.edit-sentence__item[data-sentence-id="${sentenceId}"]`);

        if (!sentenceItem || !sentenceElement) {
            console.error(`–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å ID=${sentenceId} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!`);
            return;
        }

        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: —É–±–∏—Ä–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã —Å–≤—è–∑–∞–Ω–Ω–æ—Å—Ç–∏
        sentenceItem.setAttribute("data-sentence-is-linked", "False");
        sentenceItem.setAttribute("data-sentence-has-linked-body", "False");

        // –ï—Å–ª–∏ —á–µ–∫–±–æ–∫—Å "–∂–µ—Å—Ç–∫–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ" –æ—Ç–º–µ—á–µ–Ω ‚Äî —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥
        if (hardEditCheckbox.checked) {
            sentenceItem.setAttribute("data-sentence-hard-edit", "True");
        }

        // –ú–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫–∏ –∑–∞–º–∫–æ–≤ –∏ –ª–∏–Ω–∫–æ–≤
        const linkedIcon = sentenceItem.querySelector(".edit-sentence__links-icon--is-linked");
        if (linkedIcon) linkedIcon.remove(); // –£–¥–∞–ª—è–µ–º –∏–∫–æ–Ω–∫—É —Å–≤—è–∑–∏

        const bodyLinkedIcon = sentenceItem.querySelector("control-info-icons .edit-sentence__links-icon--linked-obj");
        if (bodyLinkedIcon) bodyLinkedIcon.remove(); // –£–¥–∞–ª—è–µ–º –∏–∫–æ–Ω–∫—É body

        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        makeSentenceEditable(sentenceElement);

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø
        hideSentencePopup();
    });
}


// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ–ø–∞–ø–∞ —Å –±—É—Ñ–µ—Ä–æ–º
function showBufferPopup(button) {
    const popup = document.getElementById("bufferPopup");

    popup.style.display === "block"
}


// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ–ø–∞–ø–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏
function showSentencePopup(sentenceElement, event) {
    const popup = document.getElementById("sentencePopup");

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∞—Ç—Ä–∏–±—É—Ç–æ–≤
    const sentenceId = sentenceElement.closest("li").getAttribute("data-sentence-id");
    const sentenceIndex = sentenceElement.closest("li").getAttribute("data-sentence-index");
    const sentenceComment = sentenceElement.closest("li").getAttribute("data-sentence-comment") || "None";
    const sentenceTags = sentenceElement.closest("li").getAttribute("data-sentence-tags") || "None";

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ø–∞–ø
    document.getElementById("popupSentenceId").textContent = sentenceId;
    document.getElementById("popupSentenceIndex").textContent = sentenceIndex;
    document.getElementById("popupSentenceComment").textContent = sentenceComment;
    document.getElementById("popupSentenceTags").textContent = sentenceTags;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–∫—Ä—ã–≤–∞–µ–º, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ None, –ø—É—Å—Ç–æ–µ –∏–ª–∏ null
    document.querySelectorAll(".sentence-popup__info-item").forEach(item => {
        const value = item.querySelector("span").textContent.trim();
        if (!value || value === "None") {
            item.style.display = "none";
        } else {
            item.style.display = "block"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ, –µ—Å–ª–∏ –±—ã–ª–∏ —Å–∫—Ä—ã—Ç—ã –¥–æ —ç—Ç–æ–≥–æ
        }
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
    initPopupButtons(sentenceElement, sentenceId);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ø–∞–ø
    popup.style.display = "block";

    // –ü–æ–∑–∏—Ü–∏—è –ø–æ–ø–∞–ø–∞
    const popupWidth = popup.offsetWidth;
    const popupHeight = popup.offsetHeight;
    let posX = event.pageX + 15;
    let posY = event.pageY + 15;

    if (posX + popupWidth > window.innerWidth) {
        posX -= popupWidth + 30;
    }
    if (posY + popupHeight > window.innerHeight) {
        posY -= popupHeight + 30;
    }

    popup.style.left = `${posX}px`;
    popup.style.top = `${posY}px`;
}


/** 
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–ø–∞–ø–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
 */
function initSentencePopupCloseHandlers() {
    const popup = document.getElementById("sentencePopup");
    const closeButton = document.getElementById("closeSentencePopup");

    if (!popup || !closeButton) {
        console.error("–ü–æ–ø–∞–ø –∏–ª–∏ –∫–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!");
        return;
    }

    // –§—É–Ω–∫—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è –ø–æ–ø–∞–ø–∞
    function hidePopup() {
        popup.style.display = "none";
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ
    closeButton.addEventListener("click", hidePopup);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –ø–æ–ø–∞–ø–∞
    document.addEventListener("click", function (event) {
        if (popup.style.display === "block" && !popup.contains(event.target)) {
            hidePopup();
        }
    });
}

/**
 * Hides the sentence popup.
 */
function hideSentencePopup() {
    const popup = document.getElementById("sentencePopup");
    if (popup) {
        popup.style.display = "none";
    } else {
        console.warn("–ü–æ–ø–∞–ø –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫ "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
function expandBodySentencesHandler() {
    const bodySentencesList = document.getElementById("bodySentenceList");

    if (!bodySentencesList) {
        console.warn("–°–ø–∏—Å–æ–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω.");
        return;
    }

    bodySentencesList.style.display = bodySentencesList.style.display === "none" ? "block" : "none";
}


// –í—ã–∑—ã–≤–∞–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–µ —Ç—Ä–µ–±—É—é—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã)


// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
async function deleteBodySentence(button) {
    const sentenceItem = button.closest(".control-buttons");
    const sentenceId = sentenceItem.getAttribute("data-object-id");
    const headSentenceId = sentenceItem.getAttribute("data-related-id");

    try {
        const response = await sendRequest({
            url: "/editing_report/delete_sentence",
            method: "DELETE",
            data: { sentence_id: sentenceId,
                    related_id: headSentenceId,
                    sentence_type: "body"
                }
        });

        if (response.status === "success") {
            sentenceItem.closest(".edit-sentence__item").remove();
        } 
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", error);
    }
}


// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
async function updateSentence(sentenceElement) {
    const sentenceId = sentenceElement.closest("li").getAttribute("data-sentence-id");
    const sentenceType = sentenceElement.closest("li").getAttribute("data-sentence-type");
    const groupId = sentenceElement.closest("li").getAttribute("data-sentence-group-id"); // id –≥—Ä—É–ø–ø—ã —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–≥—Ä–∞—Ñ
    const sentenceText = sentenceElement.textContent.trim();
    const related_id = sentenceElement.closest("li").getAttribute("data-head-sentence-id");
    const hardEdit = sentenceElement.closest("li").getAttribute("data-sentence-hard-edit");


    try {
        const response = await sendRequest({
            url: "/editing_report/update_sentence_text",
            method: "PATCH",
            data: {
                sentence_id: sentenceId,
                sentence_type: sentenceType,
                group_id: groupId,
                sentence_text: sentenceText,
                related_id: related_id,
                hard_edit: hardEdit
            }
        });

        console.log("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:", response);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:", error);
    }
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ –±—É—Ñ–µ—Ä
function addSentenceDataToBuffer(button) {
    const objectId = button.closest(".control-buttons").getAttribute("data-object-id");
    const objectType = button.closest(".control-buttons").getAttribute("data-object-type");
    const relatedId = button.closest(".control-buttons").getAttribute("data-related-id");
    const objectText = button.closest(".control-buttons").getAttribute("data-text");
    const sentenceType = button.closest(".control-buttons").getAttribute("data-sentence-type");
    const sentenceGroupId = button.closest(".control-buttons").getAttribute("data-group-id");

    dataToBuffer = {
        object_id: objectId,
        object_type: objectType,
        related_id: relatedId,
        object_text: objectText,
        sentence_type: sentenceType,
        group_id: sentenceGroupId
    };

    addToBuffer(dataToBuffer);
    console.log("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä:", dataToBuffer);
}