# db_processing.py

from flask import g, current_app
from flask_login import current_user
from models import KeyWord, db, AppConfig, HeadSentence, BodySentence, TailSentence, head_sentence_group_link, body_sentence_group_link, tail_sentence_group_link, UserProfile
from logger import logger
from utils import get_max_index
from sqlalchemy.orm import joinedload

def add_keywords_to_db(key_words, report_ids):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—è –∏—Ö –ø–æ –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø–µ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º group_index.
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ current_user.id.
    
    Args:
        key_words (list): –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.
        report_ids (list): –°–ø–∏—Å–æ–∫ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ –æ—Ç—á–µ—Ç–æ–≤, –∫ –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–∏–≤—è–∑—ã–≤–∞—é—Ç—Å—è –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞.
    """
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π group_index –¥–ª—è –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã
    new_group_index = get_max_index(KeyWord, "profile_id", g.current_profile.id, KeyWord.group_index)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏
    for i, key_word in enumerate(key_words):
        KeyWord.create(
            group_index=new_group_index,
            index=i,
            key_word=key_word,
            profile_id=g.current_profile.id,
            reports=report_ids
        )



def sync_all_profiles_settings(user_id):
    """
    –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
    - –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–ª—é—á–∏.
    - –£–¥–∞–ª—è–µ—Ç –ª–∏—à–Ω–∏–µ –∫–ª—é—á–∏, –Ω–µ –≤—Ö–æ–¥—è—â–∏–µ –≤ DEFAULT_PROFILE_SETTINGS.
    
    –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è 1 —Ä–∞–∑ –∑–∞ —Å–µ—Å—Å–∏—é.
    """
    logger.info(f"–ù–∞—á–∞–ª–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")  
    DEFAULT_PROFILE_SETTINGS = current_app.config.get("DEFAULT_PROFILE_SETTINGS")
    if not DEFAULT_PROFILE_SETTINGS:
        logger.error("DEFAULT_PROFILE_SETTINGS not found in current_app.config. Syncing aborted.")
        return
    profiles = UserProfile.get_user_profiles(user_id)  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    for profile in profiles:
        existing_settings = {
            setting.config_key: setting.config_value
            for setting in AppConfig.query.filter_by(profile_id=profile.id).all()
        }

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        for key, default_value in DEFAULT_PROFILE_SETTINGS.items():
            if key not in existing_settings:
                AppConfig.set_setting(profile.id, key, default_value)

        # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–µ—Å–ª–∏ –æ–Ω–∏ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω—ã)
        for key in list(existing_settings.keys()):  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ø–∏—Å–æ–∫, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è dict –≤–æ –≤—Ä–µ–º—è –∏—Ç–µ—Ä–∞—Ü–∏–∏
            if key not in DEFAULT_PROFILE_SETTINGS:
                setting_to_delete = AppConfig.query.filter_by(profile_id=profile.id, config_key=key).first()
                if setting_to_delete:
                    AppConfig.query.filter_by(profile_id=profile.id, config_key=key).delete()
        
        # –§–∏–∫—Å–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        db.session.commit()

    logger.info(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    

# –ò—Å–ø–æ–ª—å–∑—É—é –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º –ø–æ–ª–µ–π –∏–Ω–¥–µ–∫—Å–æ–≤ –∏ –≤–µ—Å–æ–≤ –∏–∑ —Ç–∞–±–ª–∏—Ü –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
def migrate_sentence_data():
    """
    –ü–µ—Ä–µ–Ω–æ—Å–∏—Ç –∏–Ω–¥–µ–∫—Å—ã –≥–ª–∞–≤–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ –≤–µ—Å–∞ body/tail –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
    –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–≤—è–∑–µ–π.
    """
    logger.info("üîÑ –ù–∞—á–∞–ª–æ –º–∏–≥—Ä–∞—Ü–∏–∏ –∏–Ω–¥–µ–∫—Å–æ–≤ –∏ –≤–µ—Å–æ–≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π")
    # 1Ô∏è‚É£ –ü–µ—Ä–µ–Ω–æ—Å –∏–Ω–¥–µ–∫—Å–æ–≤ —É `HeadSentence`
    head_sentences = db.session.query(HeadSentence).options(joinedload(HeadSentence.groups)).all()
    for sentence in head_sentences:
        logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è {sentence.id}")
        for group in sentence.groups:
            db.session.execute(
                head_sentence_group_link.update()
                .where(
                    (head_sentence_group_link.c.head_sentence_id == sentence.id) &
                    (head_sentence_group_link.c.group_id == group.id)
                )
                .values(sentence_index=sentence.sentence_index)
            )

    # 2Ô∏è‚É£ –ü–µ—Ä–µ–Ω–æ—Å –≤–µ—Å–æ–≤ —É `BodySentence`
    body_sentences = db.session.query(BodySentence).options(joinedload(BodySentence.groups)).all()
    for sentence in body_sentences:
        logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ body –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è {sentence.id}")
        for group in sentence.groups:
            db.session.execute(
                body_sentence_group_link.update()
                .where(
                    (body_sentence_group_link.c.body_sentence_id == sentence.id) &
                    (body_sentence_group_link.c.group_id == group.id)
                )
                .values(sentence_weight=sentence.sentence_weight)
            )

    # 3Ô∏è‚É£ –ü–µ—Ä–µ–Ω–æ—Å –≤–µ—Å–æ–≤ —É `TailSentence`
    tail_sentences = db.session.query(TailSentence).options(joinedload(TailSentence.groups)).all()
    for sentence in tail_sentences:
        logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ tail –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è {sentence.id}")
        for group in sentence.groups:
            db.session.execute(
                tail_sentence_group_link.update()
                .where(
                    (tail_sentence_group_link.c.tail_sentence_id == sentence.id) &
                    (tail_sentence_group_link.c.group_id == group.id)
                )
                .values(sentence_weight=sentence.sentence_weight)
            )

    db.session.commit()
    logger.info("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ –∏ –≤–µ—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    