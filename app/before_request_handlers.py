# app/before_request_handlers.py

from flask import request, session, redirect, url_for, current_app
from flask_login import current_user
from .utils.logger import logger
from .models.models import UserProfile, AppConfig, ReportCategory
from .utils.db_processing import sync_all_profiles_settings
from tasks.celery_tasks import async_prepare_impression_snippets
import json

# –ª–æ–≥–∏–∫–∞ –¥–ª—è 100% —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã
def load_current_profile():
    # –ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ç—Ä–µ–±—É—é—Ç –ø—Ä–æ—Ñ–∏–ª—è
    if request.path.startswith('/static/') or request.path.startswith("/_debug_toolbar/") or request.endpoint in [
        "security.login", "security.logout", "security.register", "custom_logout",
        "security.forgot_password", "security.reset_password", 
        "security.change_password","profile_settings.new_profile_creation", 
        "error", "main.index", "profile_settings.create_profile", "profile_settings.set_default_profile", "feedback_form"
    ]:
        return None
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, —É–¥–∞–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ —Å–µ—Å—Å–∏–∏
    if not current_user.is_authenticated:
        session.pop("profile_id", None)
        session.pop("profile_name", None)
        session.pop("lang", None)
        logger.info("User is not authenticated")
        return

    profile_id = session.get("profile_id")

    # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å —É–∂–µ –≤ —Å–µ—Å—Å–∏–∏ —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    if profile_id:
        if not session.get("profile_name"):
            print(f"Profile id from session: {profile_id} has no profile name in session")
            profile = UserProfile.find_by_id_and_user(profile_id, current_user.id)
            if profile:
                session["profile_name"] = profile.profile_name
        if not session.get("lang") or session.get("lang") == "default_language":
            print("Profile id from session has no language in session")
            language = AppConfig.get_setting(profile_id, "APP_LANGUAGE", "default_language")
            session["lang"] = language
        logger.info(f"üòé –ü—Ä–æ—Ñ–∏–ª—å –∏–∑ —Å–µ—Å—Å–∏–∏: {profile_id} —Å –∏–º–µ–Ω–µ–º {session['profile_name']} –∏ —Å —è–∑—ã–∫–æ–º {session.get('lang')} –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–µ—Å—Å–∏–∏")
        return

    profile = UserProfile.get_default_profile(current_user.id)
    # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ—Ç –≤ —Å–µ—Å—Å–∏–∏ —Ç–æ –≤—ã—è—Å–Ω—è–µ–º –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ 
    # —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ—Ñ–∏–ª–∏, —Å–∫–æ–ª—å–∫–æ –∏—Ö –∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ 
    # –æ—Ç —ç—Ç–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∏—Ä—É–µ–º
    if not profile:
        logger.info("–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è")
        # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª–µ–π –æ—Ç–ø—Ä–∞–ª—è–µ–º –µ–≥–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
        return redirect(url_for("profile_settings.new_profile_creation"))
    else:
        logger.info(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é {profile.profile_name}")
        session["profile_id"] = profile.id
        session["profile_name"] = profile.profile_name
        session["lang"] = AppConfig.get_setting(profile.id, "APP_LANGUAGE", "default_language")
        return 
    


# –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ç–æ—Ä—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ —Å–µ—Å—Å–∏–∏
def one_time_sync_tasks():
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–µ —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ –≤ —Å–µ—Å—Å–∏—é:
    - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π.
    - (–í –±—É–¥—É—â–µ–º) –¥—Ä—É–≥–∏–µ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–µ –∑–∞–¥–∞—á–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
    """
    
    if request.path.startswith('/static/') or request.path.startswith("/_debug_toolbar/") or request.endpoint in [
        "security.login", "security.logout", "security.register", "custom_logout",
        "security.forgot_password", "security.reset_password", 
        "security.change_password","profile_settings.new_profile_creation", 
        "error", "main.index", "profile_settings.create_profile", "profile_settings.set_default_profile", "feedback_form"
    ]:
        return
            
    if not current_user.is_authenticated:
        return  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–æ—à–µ–ª ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    
    profile_id = session.get("profile_id")
    if not profile_id:
        logger.info("–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –≤—ã–±—Ä–∞–Ω!!! –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π.")
        return

    if not session.get("user_data_synced"):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
        logger.info("–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π")
        sync_all_profiles_settings(current_user.id)
            
        try:
            except_words = AppConfig.get_setting(profile_id, "EXCEPT_WORDS", [])
            user_id = current_user.id
            user_email = current_user.email
            # –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ñ–∞–π–ª–æ–≤ (—É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö + –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö + –∑–∞–≥—Ä—É–∑–∫–∞ –≤ OpenAI)
            task = async_prepare_impression_snippets.delay(profile_id, user_id, user_email, except_words)
            logger.info(f"üìÇ –ù–∞—á–∞—Ç–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Impression snippets –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è {profile_id}")
            session["impression_snippets_task_id"] = task.id # –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é, –ø—Ä–æ—Å—Ç–æ –±—Ä–æ—Å–∞—é –∑–∞–¥–∞—á—É, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–µ–¥–∏—Å 
            # –≤—ã—á–∏—Å—Ç–∏—Ç—Å—è –æ—Ç –Ω–µ–µ —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞. –°–æ—Ö—Ä–∞–Ω—è—é –≤ —Å–µ—Å—Å–∏—é, –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ—Ç–æ–º —Å–¥–µ–ª–∞—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, 
            # —á—Ç–æ–±—ã –æ–Ω –≤–∏–¥–µ–ª –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞—á–∏
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ impression snippets: {e}")
        logger.debug("Synced profile settings")
        session["user_data_synced"] = True  # –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞
        
    # ---- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ----
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ session
    if not session.get("categories_setup"):
        logger.info("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ —Å–µ—Å—Å–∏–∏. –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É...")
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π

        # 2. –ü—Ä–æ–±—É–µ–º –≤–∑—è—Ç—å –∏–∑ AppConfig (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤ session –Ω–µ—Ç)
        categories_json = AppConfig.get_setting(profile_id, "CATEGORIES_SETUP")
        if categories_json and categories_json in ('None', ''):
            categories_json = "[]"
        if categories_json:
            try:
                categories_data = json.loads(categories_json)
                print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ AppConfig: {categories_data}")
                # –ï—Å–ª–∏ –Ω–µ –ø—É—Å—Ç–æ–π –∏ –Ω–µ [] ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º
                if isinstance(categories_data, list) and categories_data:
                    session["categories_setup"] = True
                    print("—É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ AppConfig")
                    return
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ JSON –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ AppConfig: {e}")
        print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ AppConfig –ø—É—Å—Ç—ã–µ –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ: {categories_json} –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –≤ –±–∞–∑–µ")
        # 3. –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –ø—Ä–æ–±—É–µ–º —Å–æ–±—Ä–∞—Ç—å –∏–∑ –±–∞–∑—ã (—ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–≤—ã–π –≤—Ö–æ–¥ –∏–ª–∏ reset)
        categories = ReportCategory.get_categories_tree(profile_id=profile_id)
        print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –±–∞–∑—ã: {categories}")
        if categories:
            try:
                print(f"–±—É–¥–µ–º –≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –±–∞–∑—ã —Ç–æ–≥–¥–∞")
                categories_json = json.dumps(categories, ensure_ascii=False)
                AppConfig.set_setting(profile_id, "CATEGORIES_SETUP", categories_json)
                session["categories_setup"] = True
                # –≤–æ—Ç —Ç—É—Ç –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                return
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ AppConfig: {e}")

        # 4. –ï—Å–ª–∏ –Ω–∏ –≤ –±–∞–∑–µ, –Ω–∏ –≤ AppConfig –Ω–∏—á–µ–≥–æ –Ω–µ—Ç ‚Äî —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        logger.info("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∏ –≤ –±–∞–∑–µ, –Ω–∏ –≤ AppConfig. –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è.")
        return redirect(url_for("profile_settings.new_profile_creation", profile_id=profile_id))

