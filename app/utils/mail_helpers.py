# # mail_helpers.py

import requests
from flask import current_app
from app.utils.logger import logger
from flask_security.mail_util import MailUtil
from flask_security.forms import RegisterForm
from wtforms import StringField
from wtforms.validators import DataRequired

def send_email_via_zeptomail(to_email, subject, html_content, token, from_email="noreply@radiologary.com"):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ —á–µ—Ä–µ–∑ ZeptoMail API.
    :param to_email: –ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    :param subject: –¢–µ–º–∞ –ø–∏—Å—å–º–∞
    :param html_content: HTML-—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Å—å–º–∞
    :param token: –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è ZeptoMail API
    :param from_email: –ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "noreply@radiologary.com")
    """
    logger.info("üìß send_email_via_zeptomail –≤—ã–∑–≤–∞–Ω ----------------")
    url = "https://api.zeptomail.eu/v1.1/email"

    payload = {
        "from": {
            "address": from_email
        },
        "to": [
            {
                "email_address": {
                    "address": to_email
                }
            }
        ],
        "subject": subject,
        "htmlbody": html_content
    }

    headers = {
        "accept": "application/json",
        "content-type": "application/json",
        "authorization": token
    }

    try:
        response = requests.post(url, json=payload, headers=headers, timeout=10)
        response.raise_for_status()
        logger.info(f"üì§ Email sent to {to_email}")
        return True
    except requests.exceptions.RequestException as e:
        logger.error(f"‚ùå Failed to send email to {to_email}: {e}")
        return False


# CustomMailUtil - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Flask-Security —Å ZeptoMail API
class CustomMailUtil(MailUtil):
    def send_mail(self, template, subject, recipient, sender, body, html, user, **kwargs):
        token = current_app.config.get("ZEPTOMAIL_API_TOKEN")
        from_email = current_app.config.get("NOREPLY_EMAIL", "noreply@example.com")
        if not token:
            logger.error("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω ZEPTOMAIL_API_TOKEN")
            return False

        logger.info(f"üì® (CustomMailUtil) –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ —á–µ—Ä–µ–∑ ZeptoMail API: {subject} ‚Üí {recipient}")
        return send_email_via_zeptomail(
            to_email=recipient,
            subject=subject,
            html_content=html,
            token=token,
            from_email=from_email
        )
        
class ExtendedRegisterForm(RegisterForm):
    username = StringField('–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', validators=[DataRequired()])