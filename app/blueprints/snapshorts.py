from flask import Blueprint, render_template, request, jsonify, session
from flask_security import current_user
from app.models.models import ReportTextSnapshot, ReportCategory
from app.utils.logger import logger
from flask_security.decorators import auth_required
from datetime import datetime

snapshots_bp = Blueprint("snapshots", __name__)

# Functions


# Routes

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–Ω–∞–ø—à–æ—Ç–æ–≤ –æ—Ç—á–µ—Ç–æ–≤ (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ "–ê—Ä—Ö–∏–≤")
@snapshots_bp.route("/snapshots", methods=["GET"])
@auth_required()
def snapshots():
    logger.info(f"(–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–Ω–∞–ø—à–æ—Ç–æ–≤) ------------------------------------")
    logger.info(f"(–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–Ω–∞–ø—à–æ—Ç–æ–≤) üöÄ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–Ω–∞–ø—à–æ—Ç–æ–≤")
    
    user_id = current_user.id
    profile_id = session.get("profile_id")

    date_str = request.args.get("date")
    report_modality = request.args.get("report_modality")

    snapshots = []
    if date_str and report_modality:
        try:
            date_obj = datetime.strptime(date_str, "%Y-%m-%d").date()
            report_modality_int = int(report_modality)
            snapshots = ReportTextSnapshot.find_by_date_and_modality(user_id, date_obj, report_modality_int)
        except Exception as e:
            logger.error(f"[report_snapshots] ‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–Ω–∞–ø—à–æ—Ç–æ–≤: {e}")


    return render_template(
        "snapshots.html",
        snapshots=snapshots,
    )
    
    
    
# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–Ω–∞–ø—à–æ—Ç–æ–≤ –ø–æ –¥–∞—Ç–µ –∏ —Ç–∏–ø—É –æ—Ç—á–µ—Ç–∞ (AJAX)
@snapshots_bp.route("/snapshots_json", methods=["POST"])
@auth_required()
def snapshots_json():
    logger.info(f"(snapshots_json) ------------------------------------")
    logger.info(f"(snapshots_json) üöÄ –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é —Å–Ω–∞–ø—à–æ—Ç–æ–≤")
    try:
        data = request.get_json()
        date_str = data.get("date")
        report_modality = int(data.get("report_modality"))
        global_category = None
        if report_modality:
            logger.info(f"(snapshots_json) –í—ã–±—Ä–∞–Ω —Ç–∏–ø –æ—Ç—á–µ—Ç–∞: {report_modality}")
            modality= ReportCategory.get_by_id(report_modality)
            if modality and not modality.is_global:
                global_category = modality.global_id
            elif modality and modality.is_global:
                global_category = modality.id
            else:
                logger.warning(f"(snapshots_json) ‚ùå –¢–∏–ø –æ—Ç—á–µ—Ç–∞ —Å id={report_modality} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        user_id = current_user.id

        date_obj = datetime.strptime(date_str, "%Y-%m-%d").date()
        snapshots = ReportTextSnapshot.find_by_date_and_modality(user_id, date_obj, global_category)
        logger.info(f"(snapshots_json) ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(snapshots)} —Å–Ω–∞–ø—à–æ—Ç–æ–≤ –¥–ª—è –¥–∞—Ç—ã {date_str} –∏ —Ç–∏–ø–∞ {report_modality}")

        data = render_template("partials/snapshot_results_snippet.html", snapshots=snapshots)
        logger.info(f"(snapshots_json) ‚úÖ –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–Ω–∞–ø—à–æ—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω—ã")
        logger.info(f"(snapshots_json) ------------------------------------")
        return jsonify({"status": "success", "data": data}), 200

    except Exception as e:
        logger.error(f"(snapshots_json) ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–Ω–∞–ø—à–æ—Ç–æ–≤: {e}")
        return jsonify({"status": "error", "message": "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–Ω–∞–ø—à–æ—Ç–æ–≤"}), 500
    