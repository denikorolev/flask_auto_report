version: "3.8"
services:
  web:
    build: .
    env_file: 
      - .env
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DB_HOST=db  # Переопределяем переменную DB_HOST для Docker, чтобы подключаться к контейнеру базы данных
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - UPLOAD_FOLDER=/uploads
    volumes:
      - uploads_data:/uploads
    command: gunicorn --log-level=info --bind 0.0.0.0:5000 --timeout 120 app:app
    depends_on:
      - db

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt  
      - ./certbot/www:/var/www/certbot    
    depends_on:
      - web

  db:
    image: postgres:13
    env_file: 
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /home/deniskorolev/backups:/backups

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $!; certbot renew; done;'"

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data


volumes:
  pgdata:
  uploads_data:
  redis_data: